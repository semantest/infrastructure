[tool.poetry]
name = "semantest-infrastructure"
version = "0.1.0"
description = "Infrastructure as Code for Semantest serverless deployments"
authors = ["Semantest Team"]
readme = "README.md"
packages = [
    { include = "semantest", from = "src" }
]

[tool.poetry.dependencies]
python = "^3.11"
pulumi = "^3.94.0"
pulumi-aws = "^6.10.0"
pulumi-azure-native = "^2.18.0"
pydantic = "^2.5.0"
structlog = "^23.2.0"
python-dotenv = "^1.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
black = "^23.11.0"
isort = "^5.12.0"
mypy = "^1.7.0"
ruff = "^0.1.6"
pre-commit = "^3.5.0"

[tool.poetry.group.test.dependencies]
moto = "^4.2.9"
pytest-mock = "^3.12.0"
faker = "^20.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_return_any = true
warn_unreachable = true
strict_equality = true

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --cov=src --cov-report=term-missing"
testpaths = ["tests"]
pythonpath = ["src"]